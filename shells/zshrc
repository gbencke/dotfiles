#To be added after the Oh-My-Zsh zshrc script

if [ "$EUID" -eq 0 ]
  then xhost + || true
fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export _JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true'

if ! [[ $(which npm) = *"22.19.0"* ]]; then
        nvm install v22.19.0
        nvm alias default v22.19.0
fi

unalias grv 2>/dev/null

export DEFAULT_AVD=Teste
export ANDROID_HOME=~/Android/Sdk
export QT_QPA_PLATFORMTHEME='qt5ct'

export PATH=$PATH:~/.local/bin:/usr/local/lib/libreoffice/program:/home/gbencke/Android/Sdk/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools
export PATH=$PATH:$ANDROID_HOME/emulator

ZSH_THEME="clean"

alias grep_js='grep -ir --exclude-dir=node_modules  --include \*.js --include \*.jsx --exclude-dir=dist '
alias grep_jsx='grep -ir --exclude-dir=node_modules  --include \*.js --include \*.jsx --exclude-dir=dist '
alias grep_ts='grep -ir --exclude-dir=node_modules  --include \*.ts --exclude-dir=dist '
alias grep_html='grep -ir --exclude-dir=node_modules  --include \*.html --exclude-dir=dist '
alias grep_css='grep -ir --exclude-dir=node_modules  --include \*.css --include \*.scss --exclude-dir=dist '
alias grep_package_json='grep -ir --exclude-dir=000.INFRA --exclude-dir=node_modules  --include=package.json '

alias homebrew='HOMEBREW_NO_AUTO_UPDATE=1 brew install '
alias move_gitea='git remote remove origin; git remote add origin https://gitea.benckesoftware.com.br:3010/gbencke/$(basename $(pwd)).git ; git push origin --all'
alias node_modules_jest='tsc; node --inspect-brk node_modules/jest/bin/jest.js'

alias jt=/opt/jetbrains-toolbox/jetbrains-toolbox
alias vim=nvim 
alias gvim=nvim 

diff_obsidian(){
    set +x
    echo 'Will run diff'
    diff -C 10 /mnt/d/GoogleDrive/Pessoal/gitjournal/assets/00.Daily/$(date '+%Y.%m.%d').md /mnt/d/GoogleDrive/Pessoal/gitjournal/assets/00.Daily/00._Template/CurrentTasks.md
}

switch_bencke_func(){
    cp ~/.aws/config.bencke ~/.aws/config;
    cp ~/.aws/credentials.bencke ~/.aws/credentials;
    unset AWS_PROFILE;
}

switch_serviceai_func(){
    cp ~/.aws/config.serviceai ~/.aws/config; 
    cp ~/.aws/credentials.serviceai ~/.aws/credentials;
    export AWS_PROFILE=serviceai-prod;
}

remove_husky(){
    sed -i -e 's/hooksPath = .husky//g' .git/config
}

remove_cdkout(){
    find . -type d -name cdk.out -exec rm -rf {} \;  
}

remove_node_modules(){
    find . -type d -name node_modules -exec rm -rf {} \;  
}

search_desktop(){
    # nmap -p3389 "192.168.15.*" -oG -
    nmap 192.168.15.1-15  -p3389   -Pn
}

list_remotes(){
  for a in $(ls -1 ); do
    echo $a
    cd $a
    git remote -v
    cd ..
  done
}

eslint_changes(){
  export FILES_TO_CHECK=$(git diff --name-only  $(git merge-base HEAD master  2> /dev/null || git merge-base HEAD main 2> /dev/null ) | tr '\n' ' ')
  echo $FILES_TO_CHECK
  eval "docker run -it --rm -v $(pwd):/data dockerized-eslint -c /config/eslint.config.ts $FILES_TO_CHECK"
}

flake8_changes(){
  export FILES_TO_CHECK=$(git diff --name-only  $(git merge-base HEAD master  2> /dev/null || git merge-base HEAD main 2> /dev/null ) | tr '\n' ' ')
  echo $FILES_TO_CHECK
  eval "flake8 --select=WPS $FILES_TO_CHECK"
}

changed_files(){
  export BASE_COMMIT=$(git merge-base HEAD master 2> /dev/null || git merge-base HEAD main 2> /dev/null)
  git diff --name-only $BASE_COMMIT | tr '\n' ' '
}

alias git_changed_files=changed_files
alias git_eslint_changes=eslint_changes
alias switch_bencke=switch_bencke_func
alias switch_serviceai=switch_serviceai_func
alias removeHusky=remove_husky
alias removeCdkout=remove_cdkout
alias removeNodeModules=remove_node_modules
alias diffObsidian=diff_obsidian
alias listremotes=list_remotes
alias searchdesktop=search_desktop

export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

cd

